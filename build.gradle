buildscript {
    ext {
        kotlinVersion = '1.2.21'
        springBootVersion = '2.0.0.RC1'
        gradleDockerVersion = '0.17.2'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
        classpath('org.junit.platform:junit-platform-gradle-plugin:1.0.3')
        classpath("gradle.plugin.com.avast.gradle:gradle-docker-compose-plugin:0.6.17")
        classpath("com.diffplug.spotless:spotless-plugin-gradle:3.10.0")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "com.avast.gradle.docker-compose"
apply plugin: "com.diffplug.gradle.spotless"


group = 'com.disney.studios'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

spotless {
    freshmark {
        target 'README.md'
        //propertiesFile('gradle.properties')
    }

    kotlin {
        paddedCell()
        ktlint()
    }

    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
        paddedCell()
    }
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0")
    testCompile('org.springframework.boot' +
            ':spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile('io.projectreactor:reactor-test')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testRuntime("org.junit.platform:junit-platform-engine")
    testCompile("com.nhaarman:mockito-kotlin:1.5.0")
}
